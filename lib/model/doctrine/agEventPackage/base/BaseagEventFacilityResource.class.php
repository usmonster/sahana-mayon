<?php

/**
 * BaseagEventFacilityResource
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $facility_resource_id
 * @property integer $event_facility_group_id
 * @property integer $activation_sequence
 * @property agFacilityResource $agFacilityResource
 * @property agEventFacilityGroup $agEventFacilityGroup
 * @property Doctrine_Collection $agEventShift
 * @property Doctrine_Collection $agEventFacilityResourceStatus
 * @property Doctrine_Collection $agEventFacilityResourceActivationTime
 * @property Doctrine_Collection $agClientAllocationStatus
 * @property Doctrine_Collection $agPetAllocationStatus
 * 
 * @method integer                 getId()                                    Returns the current record's "id" value
 * @method integer                 getFacilityResourceId()                    Returns the current record's "facility_resource_id" value
 * @method integer                 getEventFacilityGroupId()                  Returns the current record's "event_facility_group_id" value
 * @method integer                 getActivationSequence()                    Returns the current record's "activation_sequence" value
 * @method agFacilityResource      getAgFacilityResource()                    Returns the current record's "agFacilityResource" value
 * @method agEventFacilityGroup    getAgEventFacilityGroup()                  Returns the current record's "agEventFacilityGroup" value
 * @method Doctrine_Collection     getAgEventShift()                          Returns the current record's "agEventShift" collection
 * @method Doctrine_Collection     getAgEventFacilityResourceStatus()         Returns the current record's "agEventFacilityResourceStatus" collection
 * @method Doctrine_Collection     getAgEventFacilityResourceActivationTime() Returns the current record's "agEventFacilityResourceActivationTime" collection
 * @method Doctrine_Collection     getAgClientAllocationStatus()              Returns the current record's "agClientAllocationStatus" collection
 * @method Doctrine_Collection     getAgPetAllocationStatus()                 Returns the current record's "agPetAllocationStatus" collection
 * @method agEventFacilityResource setId()                                    Sets the current record's "id" value
 * @method agEventFacilityResource setFacilityResourceId()                    Sets the current record's "facility_resource_id" value
 * @method agEventFacilityResource setEventFacilityGroupId()                  Sets the current record's "event_facility_group_id" value
 * @method agEventFacilityResource setActivationSequence()                    Sets the current record's "activation_sequence" value
 * @method agEventFacilityResource setAgFacilityResource()                    Sets the current record's "agFacilityResource" value
 * @method agEventFacilityResource setAgEventFacilityGroup()                  Sets the current record's "agEventFacilityGroup" value
 * @method agEventFacilityResource setAgEventShift()                          Sets the current record's "agEventShift" collection
 * @method agEventFacilityResource setAgEventFacilityResourceStatus()         Sets the current record's "agEventFacilityResourceStatus" collection
 * @method agEventFacilityResource setAgEventFacilityResourceActivationTime() Sets the current record's "agEventFacilityResourceActivationTime" collection
 * @method agEventFacilityResource setAgClientAllocationStatus()              Sets the current record's "agClientAllocationStatus" collection
 * @method agEventFacilityResource setAgPetAllocationStatus()                 Sets the current record's "agPetAllocationStatus" collection
 * 
 * @package    AGASTI_CORE
 * @subpackage model
 * @author     CUNY SPS
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseagEventFacilityResource extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ag_event_facility_resource');
        $this->hasColumn('id', 'integer', 4, array(
             'primary' => true,
             'type' => 'integer',
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('facility_resource_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('event_facility_group_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('activation_sequence', 'integer', 1, array(
             'default' => 100,
             'unsigned' => true,
             'type' => 'integer',
             'notnull' => true,
             'length' => 1,
             ));


        $this->index('agEventFacilityResource_unq', array(
             'fields' => 
             array(
              0 => 'facility_resource_id',
              1 => 'event_facility_group_id',
             ),
             'type' => 'unique',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('agFacilityResource', array(
             'local' => 'facility_resource_id',
             'foreign' => 'id'));

        $this->hasOne('agEventFacilityGroup', array(
             'local' => 'event_facility_group_id',
             'foreign' => 'id'));

        $this->hasMany('agEventShift', array(
             'local' => 'id',
             'foreign' => 'event_facility_resource_id'));

        $this->hasMany('agEventFacilityResourceStatus', array(
             'local' => 'id',
             'foreign' => 'event_facility_resource_id'));

        $this->hasMany('agEventFacilityResourceActivationTime', array(
             'local' => 'id',
             'foreign' => 'event_facility_resource_id'));

        $this->hasMany('agClientAllocationStatus', array(
             'local' => 'id',
             'foreign' => 'event_facility_resource_id'));

        $this->hasMany('agPetAllocationStatus', array(
             'local' => 'id',
             'foreign' => 'event_facility_resource_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}