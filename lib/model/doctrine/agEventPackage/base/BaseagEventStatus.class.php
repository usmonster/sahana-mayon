<?php

/**
 * BaseagEventStatus
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $event_id
 * @property timestamp $time_stamp
 * @property integer $event_status_type_id
 * @property agEvent $agEvent
 * @property agEventStatusType $agEventStatusType
 * 
 * @method integer           getId()                   Returns the current record's "id" value
 * @method integer           getEventId()              Returns the current record's "event_id" value
 * @method timestamp         getTimeStamp()            Returns the current record's "time_stamp" value
 * @method integer           getEventStatusTypeId()    Returns the current record's "event_status_type_id" value
 * @method agEvent           getAgEvent()              Returns the current record's "agEvent" value
 * @method agEventStatusType getAgEventStatusType()    Returns the current record's "agEventStatusType" value
 * @method agEventStatus     setId()                   Sets the current record's "id" value
 * @method agEventStatus     setEventId()              Sets the current record's "event_id" value
 * @method agEventStatus     setTimeStamp()            Sets the current record's "time_stamp" value
 * @method agEventStatus     setEventStatusTypeId()    Sets the current record's "event_status_type_id" value
 * @method agEventStatus     setAgEvent()              Sets the current record's "agEvent" value
 * @method agEventStatus     setAgEventStatusType()    Sets the current record's "agEventStatusType" value
 * 
 * @package    AGASTI_CORE
 * @subpackage model
 * @author     CUNY SPS
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseagEventStatus extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ag_event_status');
        $this->hasColumn('id', 'integer', 5, array(
             'primary' => true,
             'type' => 'integer',
             'autoincrement' => true,
             'length' => 5,
             ));
        $this->hasColumn('event_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('time_stamp', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => true,
             ));
        $this->hasColumn('event_status_type_id', 'integer', 2, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 2,
             ));


        $this->index('UX_agEventStatus', array(
             'fields' => 
             array(
              0 => 'event_id',
              1 => 'time_stamp',
             ),
             'type' => 'unique',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('agEvent', array(
             'local' => 'event_id',
             'foreign' => 'id'));

        $this->hasOne('agEventStatusType', array(
             'local' => 'event_status_type_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}