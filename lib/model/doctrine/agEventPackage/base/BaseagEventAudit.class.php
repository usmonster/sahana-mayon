<?php

/**
 * BaseagEventAudit
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $event_id
 * @property gzip $action
 * @property integer $updated_by
 * @property agEvent $agEvent
 * @property agStaff $agStaff
 * @property Doctrine_Collection $agEventAuditSql
 * 
 * @method integer             getId()              Returns the current record's "id" value
 * @method integer             getEventId()         Returns the current record's "event_id" value
 * @method gzip                getAction()          Returns the current record's "action" value
 * @method integer             getUpdatedBy()       Returns the current record's "updated_by" value
 * @method agEvent             getAgEvent()         Returns the current record's "agEvent" value
 * @method agStaff             getAgStaff()         Returns the current record's "agStaff" value
 * @method Doctrine_Collection getAgEventAuditSql() Returns the current record's "agEventAuditSql" collection
 * @method agEventAudit        setId()              Sets the current record's "id" value
 * @method agEventAudit        setEventId()         Sets the current record's "event_id" value
 * @method agEventAudit        setAction()          Sets the current record's "action" value
 * @method agEventAudit        setUpdatedBy()       Sets the current record's "updated_by" value
 * @method agEventAudit        setAgEvent()         Sets the current record's "agEvent" value
 * @method agEventAudit        setAgStaff()         Sets the current record's "agStaff" value
 * @method agEventAudit        setAgEventAuditSql() Sets the current record's "agEventAuditSql" collection
 * 
 * @package    AGASTI_CORE
 * @subpackage model
 * @author     CUNY SPS
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseagEventAudit extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ag_event_audit');
        $this->hasColumn('id', 'integer', 5, array(
             'primary' => true,
             'type' => 'integer',
             'autoincrement' => true,
             'length' => 5,
             ));
        $this->hasColumn('event_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('action', 'gzip', null, array(
             'type' => 'gzip',
             'notnull' => true,
             ));
        $this->hasColumn('updated_by', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));


        $this->index('agEventAudit_eventId', array(
             'fields' => 
             array(
              0 => 'event_id',
             ),
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('agEvent', array(
             'local' => 'event_id',
             'foreign' => 'id'));

        $this->hasOne('agStaff', array(
             'local' => 'updated_by',
             'foreign' => 'id'));

        $this->hasMany('agEventAuditSql', array(
             'local' => 'id',
             'foreign' => 'event_audit_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}