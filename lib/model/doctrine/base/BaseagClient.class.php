<?php

/**
 * BaseagClient
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $person_id
 * @property integer $event_id
 * @property agPerson $agPerson
 * @property agEvent $agEvent
 * @property Doctrine_Collection $agClientNote
 * @property Doctrine_Collection $agClientRawSkill
 * @property Doctrine_Collection $agClientMedicalStatus
 * @property Doctrine_Collection $agClientAllocationStatus
 * @property Doctrine_Collection $agClientAge
 * @property Doctrine_Collection $agClientGroup
 * @property Doctrine_Collection $agClientGroupMembership
 * 
 * @method integer             getId()                       Returns the current record's "id" value
 * @method integer             getPersonId()                 Returns the current record's "person_id" value
 * @method integer             getEventId()                  Returns the current record's "event_id" value
 * @method agPerson            getAgPerson()                 Returns the current record's "agPerson" value
 * @method agEvent             getAgEvent()                  Returns the current record's "agEvent" value
 * @method Doctrine_Collection getAgClientNote()             Returns the current record's "agClientNote" collection
 * @method Doctrine_Collection getAgClientRawSkill()         Returns the current record's "agClientRawSkill" collection
 * @method Doctrine_Collection getAgClientMedicalStatus()    Returns the current record's "agClientMedicalStatus" collection
 * @method Doctrine_Collection getAgClientAllocationStatus() Returns the current record's "agClientAllocationStatus" collection
 * @method Doctrine_Collection getAgClientAge()              Returns the current record's "agClientAge" collection
 * @method Doctrine_Collection getAgClientGroup()            Returns the current record's "agClientGroup" collection
 * @method Doctrine_Collection getAgClientGroupMembership()  Returns the current record's "agClientGroupMembership" collection
 * @method agClient            setId()                       Sets the current record's "id" value
 * @method agClient            setPersonId()                 Sets the current record's "person_id" value
 * @method agClient            setEventId()                  Sets the current record's "event_id" value
 * @method agClient            setAgPerson()                 Sets the current record's "agPerson" value
 * @method agClient            setAgEvent()                  Sets the current record's "agEvent" value
 * @method agClient            setAgClientNote()             Sets the current record's "agClientNote" collection
 * @method agClient            setAgClientRawSkill()         Sets the current record's "agClientRawSkill" collection
 * @method agClient            setAgClientMedicalStatus()    Sets the current record's "agClientMedicalStatus" collection
 * @method agClient            setAgClientAllocationStatus() Sets the current record's "agClientAllocationStatus" collection
 * @method agClient            setAgClientAge()              Sets the current record's "agClientAge" collection
 * @method agClient            setAgClientGroup()            Sets the current record's "agClientGroup" collection
 * @method agClient            setAgClientGroupMembership()  Sets the current record's "agClientGroupMembership" collection
 * 
 * @package    AGASTI_CORE
 * @subpackage model
 * @author     CUNY SPS
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseagClient extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ag_client');
        $this->hasColumn('id', 'integer', 5, array(
             'primary' => true,
             'type' => 'integer',
             'autoincrement' => true,
             'length' => 5,
             ));
        $this->hasColumn('person_id', 'integer', 5, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 5,
             ));
        $this->hasColumn('event_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));


        $this->index('UX_agClient', array(
             'fields' => 
             array(
              0 => 'person_id',
              1 => 'event_id',
             ),
             'type' => 'unique',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('agPerson', array(
             'local' => 'person_id',
             'foreign' => 'id'));

        $this->hasOne('agEvent', array(
             'local' => 'event_id',
             'foreign' => 'id'));

        $this->hasMany('agClientNote', array(
             'local' => 'id',
             'foreign' => 'client_id'));

        $this->hasMany('agClientRawSkill', array(
             'local' => 'id',
             'foreign' => 'client_id'));

        $this->hasMany('agClientMedicalStatus', array(
             'local' => 'id',
             'foreign' => 'client_id'));

        $this->hasMany('agClientAllocationStatus', array(
             'local' => 'id',
             'foreign' => 'client_id'));

        $this->hasMany('agClientAge', array(
             'local' => 'id',
             'foreign' => 'client_id'));

        $this->hasMany('agClientGroup', array(
             'local' => 'id',
             'foreign' => 'client_group_leader_id'));

        $this->hasMany('agClientGroupMembership', array(
             'local' => 'id',
             'foreign' => 'client_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}