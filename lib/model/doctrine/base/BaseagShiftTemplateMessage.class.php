<?php

/**
 * BaseagShiftTemplateMessage
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $shift_template_id
 * @property integer $message_trigger_id
 * @property integer $batch_template_id
 * @property agShiftTemplate $agShiftTemplate
 * @property agMessageTrigger $agMessageTrigger
 * @property agBatchTemplate $agBatchTemplate
 * 
 * @method integer                getId()                 Returns the current record's "id" value
 * @method integer                getShiftTemplateId()    Returns the current record's "shift_template_id" value
 * @method integer                getMessageTriggerId()   Returns the current record's "message_trigger_id" value
 * @method integer                getBatchTemplateId()    Returns the current record's "batch_template_id" value
 * @method agShiftTemplate        getAgShiftTemplate()    Returns the current record's "agShiftTemplate" value
 * @method agMessageTrigger       getAgMessageTrigger()   Returns the current record's "agMessageTrigger" value
 * @method agBatchTemplate        getAgBatchTemplate()    Returns the current record's "agBatchTemplate" value
 * @method agShiftTemplateMessage setId()                 Sets the current record's "id" value
 * @method agShiftTemplateMessage setShiftTemplateId()    Sets the current record's "shift_template_id" value
 * @method agShiftTemplateMessage setMessageTriggerId()   Sets the current record's "message_trigger_id" value
 * @method agShiftTemplateMessage setBatchTemplateId()    Sets the current record's "batch_template_id" value
 * @method agShiftTemplateMessage setAgShiftTemplate()    Sets the current record's "agShiftTemplate" value
 * @method agShiftTemplateMessage setAgMessageTrigger()   Sets the current record's "agMessageTrigger" value
 * @method agShiftTemplateMessage setAgBatchTemplate()    Sets the current record's "agBatchTemplate" value
 * 
 * @package    AGASTI_CORE
 * @subpackage model
 * @author     CUNY SPS
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseagShiftTemplateMessage extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ag_shift_template_message');
        $this->hasColumn('id', 'integer', 5, array(
             'primary' => true,
             'type' => 'integer',
             'autoincrement' => true,
             'length' => 5,
             ));
        $this->hasColumn('shift_template_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('message_trigger_id', 'integer', 2, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 2,
             ));
        $this->hasColumn('batch_template_id', 'integer', 2, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 2,
             ));


        $this->index('UX_agShiftTemplateMessage', array(
             'fields' => 
             array(
              0 => 'shift_template_id',
              1 => 'message_trigger_id',
              2 => 'batch_template_id',
             ),
             'type' => 'unique',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('agShiftTemplate', array(
             'local' => 'shift_template_id',
             'foreign' => 'id'));

        $this->hasOne('agMessageTrigger', array(
             'local' => 'message_trigger_id',
             'foreign' => 'id'));

        $this->hasOne('agBatchTemplate', array(
             'local' => 'batch_template_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}