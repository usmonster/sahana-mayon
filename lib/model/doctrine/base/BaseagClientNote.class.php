<?php

/**
 * BaseagClientNote
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $client_id
 * @property timestamp $time_stamp
 * @property integer $event_staff_id
 * @property gzip $client_note
 * @property agClient $agClient
 * @property agEventStaff $agEventStaff
 * 
 * @method integer      getId()             Returns the current record's "id" value
 * @method integer      getClientId()       Returns the current record's "client_id" value
 * @method timestamp    getTimeStamp()      Returns the current record's "time_stamp" value
 * @method integer      getEventStaffId()   Returns the current record's "event_staff_id" value
 * @method gzip         getClientNote()     Returns the current record's "client_note" value
 * @method agClient     getAgClient()       Returns the current record's "agClient" value
 * @method agEventStaff getAgEventStaff()   Returns the current record's "agEventStaff" value
 * @method agClientNote setId()             Sets the current record's "id" value
 * @method agClientNote setClientId()       Sets the current record's "client_id" value
 * @method agClientNote setTimeStamp()      Sets the current record's "time_stamp" value
 * @method agClientNote setEventStaffId()   Sets the current record's "event_staff_id" value
 * @method agClientNote setClientNote()     Sets the current record's "client_note" value
 * @method agClientNote setAgClient()       Sets the current record's "agClient" value
 * @method agClientNote setAgEventStaff()   Sets the current record's "agEventStaff" value
 * 
 * @package    AGASTI_CORE
 * @subpackage model
 * @author     CUNY SPS
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseagClientNote extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ag_client_note');
        $this->hasColumn('id', 'integer', 5, array(
             'primary' => true,
             'type' => 'integer',
             'autoincrement' => true,
             'length' => 5,
             ));
        $this->hasColumn('client_id', 'integer', 5, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 5,
             ));
        $this->hasColumn('time_stamp', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => true,
             ));
        $this->hasColumn('event_staff_id', 'integer', 5, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 5,
             ));
        $this->hasColumn('client_note', 'gzip', null, array(
             'type' => 'gzip',
             'notnull' => true,
             ));


        $this->index('UX_agClientNote', array(
             'fields' => 
             array(
              0 => 'client_id',
              1 => 'time_stamp',
             ),
             'type' => 'unique',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('agClient', array(
             'local' => 'client_id',
             'foreign' => 'id'));

        $this->hasOne('agEventStaff', array(
             'local' => 'event_staff_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}