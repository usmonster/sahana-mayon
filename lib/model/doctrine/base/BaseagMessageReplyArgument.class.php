<?php

/**
 * BaseagMessageReplyArgument
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $reply_argument
 * @property string $description
 * @property Doctrine_Collection $agBatchTemplate
 * @property Doctrine_Collection $agMessage
 * @property Doctrine_Collection $agBatchTemplateReplyArgument
 * @property Doctrine_Collection $agMessageReply
 * 
 * @method integer                getId()                           Returns the current record's "id" value
 * @method string                 getReplyArgument()                Returns the current record's "reply_argument" value
 * @method string                 getDescription()                  Returns the current record's "description" value
 * @method Doctrine_Collection    getAgBatchTemplate()              Returns the current record's "agBatchTemplate" collection
 * @method Doctrine_Collection    getAgMessage()                    Returns the current record's "agMessage" collection
 * @method Doctrine_Collection    getAgBatchTemplateReplyArgument() Returns the current record's "agBatchTemplateReplyArgument" collection
 * @method Doctrine_Collection    getAgMessageReply()               Returns the current record's "agMessageReply" collection
 * @method agMessageReplyArgument setId()                           Sets the current record's "id" value
 * @method agMessageReplyArgument setReplyArgument()                Sets the current record's "reply_argument" value
 * @method agMessageReplyArgument setDescription()                  Sets the current record's "description" value
 * @method agMessageReplyArgument setAgBatchTemplate()              Sets the current record's "agBatchTemplate" collection
 * @method agMessageReplyArgument setAgMessage()                    Sets the current record's "agMessage" collection
 * @method agMessageReplyArgument setAgBatchTemplateReplyArgument() Sets the current record's "agBatchTemplateReplyArgument" collection
 * @method agMessageReplyArgument setAgMessageReply()               Sets the current record's "agMessageReply" collection
 * 
 * @package    AGASTI_CORE
 * @subpackage model
 * @author     CUNY SPS
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseagMessageReplyArgument extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ag_message_reply_argument');
        $this->hasColumn('id', 'integer', 5, array(
             'primary' => true,
             'type' => 'integer',
             'autoincrement' => true,
             'length' => 5,
             ));
        $this->hasColumn('reply_argument', 'string', 64, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 64,
             ));
        $this->hasColumn('description', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));


        $this->index('agMessageReplyArgument_unq', array(
             'fields' => 
             array(
              0 => 'reply_argument',
             ),
             'type' => 'unique',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('agBatchTemplate', array(
             'refClass' => 'agBatchTemplateReplyArgument',
             'local' => 'message_reply_argument_id',
             'foreign' => 'batch_template_id'));

        $this->hasMany('agMessage', array(
             'refClass' => 'agMessageReply',
             'local' => 'message_reply_argument_id',
             'foreign' => 'message_id'));

        $this->hasMany('agBatchTemplateReplyArgument', array(
             'local' => 'id',
             'foreign' => 'message_reply_argument_id'));

        $this->hasMany('agMessageReply', array(
             'local' => 'id',
             'foreign' => 'message_reply_argument_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}