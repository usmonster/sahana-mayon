<?php

/**
 * BaseagAddress
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $address_standard_id
 * @property agAddressStandard $agAddressStandard
 * @property Doctrine_Collection $agAddressValue
 * @property Doctrine_Collection $agAddressGeo
 * @property Doctrine_Collection $agAddressContactType
 * @property Doctrine_Collection $agEntityAddressContact
 * @property Doctrine_Collection $agAddressMjAgAddressValue
 * 
 * @method integer             getId()                        Returns the current record's "id" value
 * @method integer             getAddressStandardId()         Returns the current record's "address_standard_id" value
 * @method agAddressStandard   getAgAddressStandard()         Returns the current record's "agAddressStandard" value
 * @method Doctrine_Collection getAgAddressValue()            Returns the current record's "agAddressValue" collection
 * @method Doctrine_Collection getAgAddressGeo()              Returns the current record's "agAddressGeo" collection
 * @method Doctrine_Collection getAgAddressContactType()      Returns the current record's "agAddressContactType" collection
 * @method Doctrine_Collection getAgEntityAddressContact()    Returns the current record's "agEntityAddressContact" collection
 * @method Doctrine_Collection getAgAddressMjAgAddressValue() Returns the current record's "agAddressMjAgAddressValue" collection
 * @method agAddress           setId()                        Sets the current record's "id" value
 * @method agAddress           setAddressStandardId()         Sets the current record's "address_standard_id" value
 * @method agAddress           setAgAddressStandard()         Sets the current record's "agAddressStandard" value
 * @method agAddress           setAgAddressValue()            Sets the current record's "agAddressValue" collection
 * @method agAddress           setAgAddressGeo()              Sets the current record's "agAddressGeo" collection
 * @method agAddress           setAgAddressContactType()      Sets the current record's "agAddressContactType" collection
 * @method agAddress           setAgEntityAddressContact()    Sets the current record's "agEntityAddressContact" collection
 * @method agAddress           setAgAddressMjAgAddressValue() Sets the current record's "agAddressMjAgAddressValue" collection
 * 
 * @package    AGASTI_CORE
 * @subpackage model
 * @author     CUNY SPS
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseagAddress extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ag_address');
        $this->hasColumn('id', 'integer', 5, array(
             'primary' => true,
             'type' => 'integer',
             'autoincrement' => true,
             'length' => 5,
             ));
        $this->hasColumn('address_standard_id', 'integer', 2, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 2,
             ));


        $this->index('agSiteAddress_addressStandardId', array(
             'fields' => 
             array(
              0 => 'address_standard_id',
             ),
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('agAddressStandard', array(
             'local' => 'address_standard_id',
             'foreign' => 'id'));

        $this->hasMany('agAddressValue', array(
             'refClass' => 'agAddressMjAgAddressValue',
             'local' => 'address_id',
             'foreign' => 'address_value_id'));

        $this->hasMany('agAddressGeo', array(
             'local' => 'id',
             'foreign' => 'geo_id'));

        $this->hasMany('agAddressContactType', array(
             'refClass' => 'agEntityAddressContact',
             'local' => 'address_id',
             'foreign' => 'address_contact_type_id'));

        $this->hasMany('agEntityAddressContact', array(
             'local' => 'id',
             'foreign' => 'address_id'));

        $this->hasMany('agAddressMjAgAddressValue', array(
             'local' => 'id',
             'foreign' => 'address_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}