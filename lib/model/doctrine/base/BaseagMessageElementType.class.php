<?php

/**
 * BaseagMessageElementType
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $message_element_type
 * @property string $description
 * @property boolean $app_display
 * @property Doctrine_Collection $agMessageType
 * @property Doctrine_Collection $agMessageTemplate
 * @property Doctrine_Collection $agMessage
 * @property Doctrine_Collection $agDefaultMessageTypeElement
 * @property Doctrine_Collection $agMessageTemplateElement
 * @property Doctrine_Collection $agMessageElement
 * 
 * @method integer              getId()                          Returns the current record's "id" value
 * @method string               getMessageElementType()          Returns the current record's "message_element_type" value
 * @method string               getDescription()                 Returns the current record's "description" value
 * @method boolean              getAppDisplay()                  Returns the current record's "app_display" value
 * @method Doctrine_Collection  getAgMessageType()               Returns the current record's "agMessageType" collection
 * @method Doctrine_Collection  getAgMessageTemplate()           Returns the current record's "agMessageTemplate" collection
 * @method Doctrine_Collection  getAgMessage()                   Returns the current record's "agMessage" collection
 * @method Doctrine_Collection  getAgDefaultMessageTypeElement() Returns the current record's "agDefaultMessageTypeElement" collection
 * @method Doctrine_Collection  getAgMessageTemplateElement()    Returns the current record's "agMessageTemplateElement" collection
 * @method Doctrine_Collection  getAgMessageElement()            Returns the current record's "agMessageElement" collection
 * @method agMessageElementType setId()                          Sets the current record's "id" value
 * @method agMessageElementType setMessageElementType()          Sets the current record's "message_element_type" value
 * @method agMessageElementType setDescription()                 Sets the current record's "description" value
 * @method agMessageElementType setAppDisplay()                  Sets the current record's "app_display" value
 * @method agMessageElementType setAgMessageType()               Sets the current record's "agMessageType" collection
 * @method agMessageElementType setAgMessageTemplate()           Sets the current record's "agMessageTemplate" collection
 * @method agMessageElementType setAgMessage()                   Sets the current record's "agMessage" collection
 * @method agMessageElementType setAgDefaultMessageTypeElement() Sets the current record's "agDefaultMessageTypeElement" collection
 * @method agMessageElementType setAgMessageTemplateElement()    Sets the current record's "agMessageTemplateElement" collection
 * @method agMessageElementType setAgMessageElement()            Sets the current record's "agMessageElement" collection
 * 
 * @package    AGASTI_CORE
 * @subpackage model
 * @author     CUNY SPS
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseagMessageElementType extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ag_message_element_type');
        $this->hasColumn('id', 'integer', 2, array(
             'primary' => true,
             'type' => 'integer',
             'autoincrement' => true,
             'length' => 2,
             ));
        $this->hasColumn('message_element_type', 'string', 30, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 30,
             ));
        $this->hasColumn('description', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('app_display', 'boolean', null, array(
             'default' => 1,
             'type' => 'boolean',
             'notnull' => true,
             ));


        $this->index('UX_agMessageElementType', array(
             'fields' => 
             array(
              0 => 'message_element_type',
             ),
             'type' => 'unique',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('agMessageType', array(
             'refClass' => 'agDefaultMessageTypeElement',
             'local' => 'message_element_type_id',
             'foreign' => 'message_type_id'));

        $this->hasMany('agMessageTemplate', array(
             'refClass' => 'agMessageTemplateElement',
             'local' => 'message_element_type_id',
             'foreign' => 'message_template_id'));

        $this->hasMany('agMessage', array(
             'refClass' => 'agMessageElement',
             'local' => 'message_element_type_id',
             'foreign' => 'message_id'));

        $this->hasMany('agDefaultMessageTypeElement', array(
             'local' => 'id',
             'foreign' => 'message_element_type_id'));

        $this->hasMany('agMessageTemplateElement', array(
             'local' => 'id',
             'foreign' => 'message_element_type_id'));

        $this->hasMany('agMessageElement', array(
             'local' => 'id',
             'foreign' => 'message_element_type_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}