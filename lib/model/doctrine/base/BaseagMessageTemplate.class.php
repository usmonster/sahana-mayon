<?php

/**
 * BaseagMessageTemplate
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $message_template
 * @property integer $message_type_id
 * @property agMessageType $agMessage
 * @property Doctrine_Collection $agMessageElementType
 * @property Doctrine_Collection $agBatchTemplate
 * @property Doctrine_Collection $agMessageTemplateElement
 * @property Doctrine_Collection $agMessageBatchTemplate
 * 
 * @method integer             getId()                       Returns the current record's "id" value
 * @method string              getMessageTemplate()          Returns the current record's "message_template" value
 * @method integer             getMessageTypeId()            Returns the current record's "message_type_id" value
 * @method agMessageType       getAgMessage()                Returns the current record's "agMessage" value
 * @method Doctrine_Collection getAgMessageElementType()     Returns the current record's "agMessageElementType" collection
 * @method Doctrine_Collection getAgBatchTemplate()          Returns the current record's "agBatchTemplate" collection
 * @method Doctrine_Collection getAgMessageTemplateElement() Returns the current record's "agMessageTemplateElement" collection
 * @method Doctrine_Collection getAgMessageBatchTemplate()   Returns the current record's "agMessageBatchTemplate" collection
 * @method agMessageTemplate   setId()                       Sets the current record's "id" value
 * @method agMessageTemplate   setMessageTemplate()          Sets the current record's "message_template" value
 * @method agMessageTemplate   setMessageTypeId()            Sets the current record's "message_type_id" value
 * @method agMessageTemplate   setAgMessage()                Sets the current record's "agMessage" value
 * @method agMessageTemplate   setAgMessageElementType()     Sets the current record's "agMessageElementType" collection
 * @method agMessageTemplate   setAgBatchTemplate()          Sets the current record's "agBatchTemplate" collection
 * @method agMessageTemplate   setAgMessageTemplateElement() Sets the current record's "agMessageTemplateElement" collection
 * @method agMessageTemplate   setAgMessageBatchTemplate()   Sets the current record's "agMessageBatchTemplate" collection
 * 
 * @package    AGASTI_CORE
 * @subpackage model
 * @author     CUNY SPS
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseagMessageTemplate extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ag_message_template');
        $this->hasColumn('id', 'integer', 2, array(
             'primary' => true,
             'type' => 'integer',
             'autoincrement' => true,
             'length' => 2,
             ));
        $this->hasColumn('message_template', 'string', 64, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 64,
             ));
        $this->hasColumn('message_type_id', 'integer', 2, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 2,
             ));


        $this->index('agMessageTemplate_unq', array(
             'fields' => 
             array(
              0 => 'message_template',
             ),
             'type' => 'unique',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('agMessageType as agMessage', array(
             'local' => 'message_type_id',
             'foreign' => 'id'));

        $this->hasMany('agMessageElementType', array(
             'refClass' => 'agMessageTemplateElement',
             'local' => 'message_template_id',
             'foreign' => 'message_element_type_id'));

        $this->hasMany('agBatchTemplate', array(
             'refClass' => 'agMessageBatchTemplate',
             'local' => 'message_template_id',
             'foreign' => 'batch_template_id'));

        $this->hasMany('agMessageTemplateElement', array(
             'local' => 'id',
             'foreign' => 'message_template_id'));

        $this->hasMany('agMessageBatchTemplate', array(
             'local' => 'id',
             'foreign' => 'message_template_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}