<?php

/**
 * BaseagAddressFormat
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $address_standard_id
 * @property integer $address_element_id
 * @property integer $line_sequence
 * @property integer $inline_sequence
 * @property string $pre_delimiter
 * @property string $post_delimiter
 * @property integer $field_type_id
 * @property boolean $is_required
 * @property agAddressElement $agAddressElement
 * @property agAddressStandard $agAddressStandard
 * @property agFieldType $agFieldType
 * 
 * @method integer           getId()                  Returns the current record's "id" value
 * @method integer           getAddressStandardId()   Returns the current record's "address_standard_id" value
 * @method integer           getAddressElementId()    Returns the current record's "address_element_id" value
 * @method integer           getLineSequence()        Returns the current record's "line_sequence" value
 * @method integer           getInlineSequence()      Returns the current record's "inline_sequence" value
 * @method string            getPreDelimiter()        Returns the current record's "pre_delimiter" value
 * @method string            getPostDelimiter()       Returns the current record's "post_delimiter" value
 * @method integer           getFieldTypeId()         Returns the current record's "field_type_id" value
 * @method boolean           getIsRequired()          Returns the current record's "is_required" value
 * @method agAddressElement  getAgAddressElement()    Returns the current record's "agAddressElement" value
 * @method agAddressStandard getAgAddressStandard()   Returns the current record's "agAddressStandard" value
 * @method agFieldType       getAgFieldType()         Returns the current record's "agFieldType" value
 * @method agAddressFormat   setId()                  Sets the current record's "id" value
 * @method agAddressFormat   setAddressStandardId()   Sets the current record's "address_standard_id" value
 * @method agAddressFormat   setAddressElementId()    Sets the current record's "address_element_id" value
 * @method agAddressFormat   setLineSequence()        Sets the current record's "line_sequence" value
 * @method agAddressFormat   setInlineSequence()      Sets the current record's "inline_sequence" value
 * @method agAddressFormat   setPreDelimiter()        Sets the current record's "pre_delimiter" value
 * @method agAddressFormat   setPostDelimiter()       Sets the current record's "post_delimiter" value
 * @method agAddressFormat   setFieldTypeId()         Sets the current record's "field_type_id" value
 * @method agAddressFormat   setIsRequired()          Sets the current record's "is_required" value
 * @method agAddressFormat   setAgAddressElement()    Sets the current record's "agAddressElement" value
 * @method agAddressFormat   setAgAddressStandard()   Sets the current record's "agAddressStandard" value
 * @method agAddressFormat   setAgFieldType()         Sets the current record's "agFieldType" value
 * 
 * @package    AGASTI_CORE
 * @subpackage model
 * @author     CUNY SPS
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseagAddressFormat extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ag_address_format');
        $this->hasColumn('id', 'integer', 4, array(
             'primary' => true,
             'type' => 'integer',
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('address_standard_id', 'integer', 2, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 2,
             ));
        $this->hasColumn('address_element_id', 'integer', 2, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 2,
             ));
        $this->hasColumn('line_sequence', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 1,
             ));
        $this->hasColumn('inline_sequence', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 1,
             ));
        $this->hasColumn('pre_delimiter', 'string', 32, array(
             'type' => 'string',
             'length' => 32,
             ));
        $this->hasColumn('post_delimiter', 'string', 32, array(
             'type' => 'string',
             'length' => 32,
             ));
        $this->hasColumn('field_type_id', 'integer', 2, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 2,
             ));
        $this->hasColumn('is_required', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             ));


        $this->index('agAddressFormat_unq', array(
             'fields' => 
             array(
              0 => 'address_standard_id',
              1 => 'address_element_id',
             ),
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('agAddressElement', array(
             'local' => 'address_element_id',
             'foreign' => 'id'));

        $this->hasOne('agAddressStandard', array(
             'local' => 'address_standard_id',
             'foreign' => 'id'));

        $this->hasOne('agFieldType', array(
             'local' => 'field_type_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}