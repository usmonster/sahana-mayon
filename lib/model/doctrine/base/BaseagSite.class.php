<?php

/**
 * BaseagSite
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $entity_id
 * @property agEntity $agEntity
 * @property Doctrine_Collection $agFacility
 * 
 * @method integer             getId()         Returns the current record's "id" value
 * @method integer             getEntityId()   Returns the current record's "entity_id" value
 * @method agEntity            getAgEntity()   Returns the current record's "agEntity" value
 * @method Doctrine_Collection getAgFacility() Returns the current record's "agFacility" collection
 * @method agSite              setId()         Sets the current record's "id" value
 * @method agSite              setEntityId()   Sets the current record's "entity_id" value
 * @method agSite              setAgEntity()   Sets the current record's "agEntity" value
 * @method agSite              setAgFacility() Sets the current record's "agFacility" collection
 * 
 * @package    AGASTI_CORE
 * @subpackage model
 * @author     CUNY SPS
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseagSite extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ag_site');
        $this->hasColumn('id', 'integer', 5, array(
             'primary' => true,
             'type' => 'integer',
             'autoincrement' => true,
             'length' => 5,
             ));
        $this->hasColumn('entity_id', 'integer', 5, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 5,
             ));


        $this->index('agSite_unq', array(
             'fields' => 
             array(
              0 => 'entity_id',
             ),
             'type' => 'unique',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('agEntity', array(
             'local' => 'entity_id',
             'foreign' => 'id'));

        $this->hasMany('agFacility', array(
             'local' => 'id',
             'foreign' => 'site_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}