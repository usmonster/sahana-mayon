<?php

/**
 * BaseagShiftTemplate
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $shift_template
 * @property string $description
 * @property integer $scenario_id
 * @property integer $facility_resource_type_id
 * @property integer $staff_resource_type_id
 * @property integer $task_id
 * @property integer $task_length_minutes
 * @property integer $break_length_minutes
 * @property integer $minutes_start_to_facility_activation
 * @property integer $shift_repeats
 * @property integer $max_staff_repeat_shifts
 * @property integer $shift_status_id
 * @property integer $deployment_algorithm_id
 * @property agFacilityResourceType $agFacilityResourceType
 * @property agStaffResourceType $agStaffResourceType
 * @property agTask $agTask
 * @property agShiftStatus $agShiftStatus
 * @property agDeploymentAlgorithm $agDeploymentAlgorithm
 * @property agScenario $agScenario
 * @property Doctrine_Collection $agScenarioShift
 * @property Doctrine_Collection $agShiftTemplateMessage
 * 
 * @method integer                getId()                                   Returns the current record's "id" value
 * @method string                 getShiftTemplate()                        Returns the current record's "shift_template" value
 * @method string                 getDescription()                          Returns the current record's "description" value
 * @method integer                getScenarioId()                           Returns the current record's "scenario_id" value
 * @method integer                getFacilityResourceTypeId()               Returns the current record's "facility_resource_type_id" value
 * @method integer                getStaffResourceTypeId()                  Returns the current record's "staff_resource_type_id" value
 * @method integer                getTaskId()                               Returns the current record's "task_id" value
 * @method integer                getTaskLengthMinutes()                    Returns the current record's "task_length_minutes" value
 * @method integer                getBreakLengthMinutes()                   Returns the current record's "break_length_minutes" value
 * @method integer                getMinutesStartToFacilityActivation()     Returns the current record's "minutes_start_to_facility_activation" value
 * @method integer                getShiftRepeats()                         Returns the current record's "shift_repeats" value
 * @method integer                getMaxStaffRepeatShifts()                 Returns the current record's "max_staff_repeat_shifts" value
 * @method integer                getShiftStatusId()                        Returns the current record's "shift_status_id" value
 * @method integer                getDeploymentAlgorithmId()                Returns the current record's "deployment_algorithm_id" value
 * @method agFacilityResourceType getAgFacilityResourceType()               Returns the current record's "agFacilityResourceType" value
 * @method agStaffResourceType    getAgStaffResourceType()                  Returns the current record's "agStaffResourceType" value
 * @method agTask                 getAgTask()                               Returns the current record's "agTask" value
 * @method agShiftStatus          getAgShiftStatus()                        Returns the current record's "agShiftStatus" value
 * @method agDeploymentAlgorithm  getAgDeploymentAlgorithm()                Returns the current record's "agDeploymentAlgorithm" value
 * @method agScenario             getAgScenario()                           Returns the current record's "agScenario" value
 * @method Doctrine_Collection    getAgScenarioShift()                      Returns the current record's "agScenarioShift" collection
 * @method Doctrine_Collection    getAgShiftTemplateMessage()               Returns the current record's "agShiftTemplateMessage" collection
 * @method agShiftTemplate        setId()                                   Sets the current record's "id" value
 * @method agShiftTemplate        setShiftTemplate()                        Sets the current record's "shift_template" value
 * @method agShiftTemplate        setDescription()                          Sets the current record's "description" value
 * @method agShiftTemplate        setScenarioId()                           Sets the current record's "scenario_id" value
 * @method agShiftTemplate        setFacilityResourceTypeId()               Sets the current record's "facility_resource_type_id" value
 * @method agShiftTemplate        setStaffResourceTypeId()                  Sets the current record's "staff_resource_type_id" value
 * @method agShiftTemplate        setTaskId()                               Sets the current record's "task_id" value
 * @method agShiftTemplate        setTaskLengthMinutes()                    Sets the current record's "task_length_minutes" value
 * @method agShiftTemplate        setBreakLengthMinutes()                   Sets the current record's "break_length_minutes" value
 * @method agShiftTemplate        setMinutesStartToFacilityActivation()     Sets the current record's "minutes_start_to_facility_activation" value
 * @method agShiftTemplate        setShiftRepeats()                         Sets the current record's "shift_repeats" value
 * @method agShiftTemplate        setMaxStaffRepeatShifts()                 Sets the current record's "max_staff_repeat_shifts" value
 * @method agShiftTemplate        setShiftStatusId()                        Sets the current record's "shift_status_id" value
 * @method agShiftTemplate        setDeploymentAlgorithmId()                Sets the current record's "deployment_algorithm_id" value
 * @method agShiftTemplate        setAgFacilityResourceType()               Sets the current record's "agFacilityResourceType" value
 * @method agShiftTemplate        setAgStaffResourceType()                  Sets the current record's "agStaffResourceType" value
 * @method agShiftTemplate        setAgTask()                               Sets the current record's "agTask" value
 * @method agShiftTemplate        setAgShiftStatus()                        Sets the current record's "agShiftStatus" value
 * @method agShiftTemplate        setAgDeploymentAlgorithm()                Sets the current record's "agDeploymentAlgorithm" value
 * @method agShiftTemplate        setAgScenario()                           Sets the current record's "agScenario" value
 * @method agShiftTemplate        setAgScenarioShift()                      Sets the current record's "agScenarioShift" collection
 * @method agShiftTemplate        setAgShiftTemplateMessage()               Sets the current record's "agShiftTemplateMessage" collection
 * 
 * @package    AGASTI_CORE
 * @subpackage model
 * @author     CUNY SPS
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseagShiftTemplate extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ag_shift_template');
        $this->hasColumn('id', 'integer', 4, array(
             'primary' => true,
             'type' => 'integer',
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('shift_template', 'string', 64, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 64,
             ));
        $this->hasColumn('description', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('scenario_id', 'integer', 2, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 2,
             ));
        $this->hasColumn('facility_resource_type_id', 'integer', 2, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 2,
             ));
        $this->hasColumn('staff_resource_type_id', 'integer', 2, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 2,
             ));
        $this->hasColumn('task_id', 'integer', 2, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 2,
             ));
        $this->hasColumn('task_length_minutes', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('break_length_minutes', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('minutes_start_to_facility_activation', 'integer', 5, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 5,
             ));
        $this->hasColumn('shift_repeats', 'integer', 2, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 2,
             ));
        $this->hasColumn('max_staff_repeat_shifts', 'integer', 2, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 2,
             ));
        $this->hasColumn('shift_status_id', 'integer', 2, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 2,
             ));
        $this->hasColumn('deployment_algorithm_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('agFacilityResourceType', array(
             'local' => 'facility_resource_type_id',
             'foreign' => 'id'));

        $this->hasOne('agStaffResourceType', array(
             'local' => 'staff_resource_type_id',
             'foreign' => 'id'));

        $this->hasOne('agTask', array(
             'local' => 'task_id',
             'foreign' => 'id'));

        $this->hasOne('agShiftStatus', array(
             'local' => 'shift_status_id',
             'foreign' => 'id'));

        $this->hasOne('agDeploymentAlgorithm', array(
             'local' => 'deployment_algorithm_id',
             'foreign' => 'id'));

        $this->hasOne('agScenario', array(
             'local' => 'scenario_id',
             'foreign' => 'id'));

        $this->hasMany('agScenarioShift', array(
             'local' => 'id',
             'foreign' => 'originator_id'));

        $this->hasMany('agShiftTemplateMessage', array(
             'local' => 'id',
             'foreign' => 'shift_template_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}