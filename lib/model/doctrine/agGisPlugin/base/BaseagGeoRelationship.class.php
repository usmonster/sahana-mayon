<?php

/**
 * BaseagGeoRelationship
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $geo_id1
 * @property integer $geo_id2
 * @property integer $geo_relationship_type_id
 * @property decimal $geo_relationship_km_value
 * @property agGeoRelationshipType $agGeoRelationshipType
 * @property agGeo $geo1
 * @property agGeo $geo2
 * 
 * @method integer               getId()                        Returns the current record's "id" value
 * @method integer               getGeoId1()                    Returns the current record's "geo_id1" value
 * @method integer               getGeoId2()                    Returns the current record's "geo_id2" value
 * @method integer               getGeoRelationshipTypeId()     Returns the current record's "geo_relationship_type_id" value
 * @method decimal               getGeoRelationshipKmValue()    Returns the current record's "geo_relationship_km_value" value
 * @method agGeoRelationshipType getAgGeoRelationshipType()     Returns the current record's "agGeoRelationshipType" value
 * @method agGeo                 getGeo1()                      Returns the current record's "geo1" value
 * @method agGeo                 getGeo2()                      Returns the current record's "geo2" value
 * @method agGeoRelationship     setId()                        Sets the current record's "id" value
 * @method agGeoRelationship     setGeoId1()                    Sets the current record's "geo_id1" value
 * @method agGeoRelationship     setGeoId2()                    Sets the current record's "geo_id2" value
 * @method agGeoRelationship     setGeoRelationshipTypeId()     Sets the current record's "geo_relationship_type_id" value
 * @method agGeoRelationship     setGeoRelationshipKmValue()    Sets the current record's "geo_relationship_km_value" value
 * @method agGeoRelationship     setAgGeoRelationshipType()     Sets the current record's "agGeoRelationshipType" value
 * @method agGeoRelationship     setGeo1()                      Sets the current record's "geo1" value
 * @method agGeoRelationship     setGeo2()                      Sets the current record's "geo2" value
 * 
 * @package    AGASTI_CORE
 * @subpackage model
 * @author     CUNY SPS
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseagGeoRelationship extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ag_geo_relationship');
        $this->hasColumn('id', 'integer', 5, array(
             'primary' => true,
             'type' => 'integer',
             'autoincrement' => true,
             'length' => 5,
             ));
        $this->hasColumn('geo_id1', 'integer', 5, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 5,
             ));
        $this->hasColumn('geo_id2', 'integer', 5, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 5,
             ));
        $this->hasColumn('geo_relationship_type_id', 'integer', 2, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 2,
             ));
        $this->hasColumn('geo_relationship_km_value', 'decimal', 12, array(
             'scale' => 6,
             'type' => 'decimal',
             'notnull' => true,
             'length' => 12,
             ));


        $this->index('UX_agGeoRelationship', array(
             'fields' => 
             array(
              0 => 'geo_id1',
              1 => 'geo_id2',
             ),
             'type' => 'unique',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('agGeoRelationshipType', array(
             'local' => 'geo_relationship_type_id',
             'foreign' => 'id'));

        $this->hasOne('agGeo as geo1', array(
             'local' => 'geo_id1',
             'foreign' => 'id'));

        $this->hasOne('agGeo as geo2', array(
             'local' => 'geo_id2',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}