# You can find more information about this file on the symfony website:
# http://www.symfony-project.org/reference/1_4/en/10-Routing

# default rules
#TODO: Utilize route collections here! -UA
homepage:
  url:   /
  param: { module: home, action: index }
facility:
  url:  /facility
  param: { module: facility, action: index }
client:
  url: /client
  param: { module: client, action: index }
scenario:
  url: /scenario
  param: { module: scenario, action: index }
org:
  url: /organization
  param: { module: organization, action: index }
admin:
  url: /admin
  param: { module: admin, action: index }
about:
  url: /about
  param: { module: about, action: index }
# generic rules
# please, remove them by adding more specific rules

facility_import:
  url:  /facility/import
  param: { module: facility, action: import }

facility_poll:
  url:  /facility/poll
  param: { module: facility, action: poll }

api_facility:
  url:     /facility/facilities.:sf_format
  param:   { module: facility, action: list } 
  class:   sfDoctrineRoute
  options: { model: agFacility, type: object }
  requirements: 
    sf_format: (?:json)

scenario_meta:
  url:     /scenario/:id/meta
  options: { model: agScenario, type: object }
  param:   { module: scenario, action: meta }

scenario_meta_new:
  url:     /scenario/meta
  options: { model: agScenario, type: object }
  param:   { module: scenario, action: meta }

scenario_resource_types:
  url:     /scenario/:id/resourcetypes
  options: { model: agScenario, type: object }
  param:   { module: scenario, action: resourcetypes }

scenario_edit:
  url:     /scenario/:id/edit
  options: { model: agScenario, type: object }
  param:   { module: scenario, action: edit }

scenario_show_facility_staff_resource:
  url:     /scenario/:id/staffresources
  options: { model: agScenario, type: object }
  param:   { module: scenario, action: staffresources }

scenario_listgroups:
  url:     /scenario/:id/listgroups
  options: { model: agScenario, type: object }
  param:   { module: scenario, action: listgroups }

scenario_staff_pool:
  url:     /scenario/:id/staffpool
  options: { model: agScenario, type: object }
  param:   { module: scenario, action: staffpool }

scenario_search:
  url:     /scenario/:id/search
  options: { model: agScenario, type: object }
  param:   { module: scenario, action search }

scenario_fgroup_delete:
  url:     /scenario/facilityGroupDelete/:groupId
  options: { model: agScenario, typeL object }
  param:   { module: scenario, action: facilityGroupDelete }
  
scenario_fgroup_edit:
  url:     /scenario/:id/fgroup/:groupid
  options: { model: agScenario, type: object }
  param:   { module: scenario, action: fgroup }
  
scenario_fgroup:
  url:     /scenario/:id/fgroup
  options: { model: agScenario, type: object }
  param:   { module: scenario, action: fgroup }

scenario_shift_templates:
  url:     /scenario/:id/shifttemplates
  options: { model: agScenario, type: object }
  param:   { module: scenario, action: shifttemplates }

scenario_new_shift_templates:
  url:     /scenario/:id/newshifttemplates
  options: { model: agScenario, type: object }
  param:   { module: scenario, action: newshifttemplates }

scenario_add_shift_template:
  url:     /scenario/:id/addshifttemplate
  options: { model: agScenario, type: object }
  param:   { module: scenario, action: addshifttemplate }

scenario_shift_list:
  url:     /scenario/:id/shifts
  options: { model: agScenario, type: object }
  param:   { module: scenario, action: shifts }

scenario_shifts:
  url:     /scenario/:id/shifts/:shiftid
  options: { model: agScenario, type: object }
  param:   { module: scenario, action: shifts }

scenario_review:
  url:     /scenario/:id/review
  options: { model: agScenario, type: object }
  param:   { module: scenario, action: review }

scenario_facility_group:
  url:     /scenario/:id/listgroup
  options: { model: agScenario, type: object }
  param:   { module: scenario, action: listgroup }

scenario_facility_export:
  url:     /scenario/facilityexport/:id
  options: { model: agScenario, type: object }
  param:   { module: scenario, action: facilityexport }

scenario_facility_import:
  url:     /scenario/facilityimport/:id
  options: { model: agScenario, type: object }
  param:   { module: scenario, action: facilityimport }

sf_guard_signin:
  url:   /login
  param: { module: sfGuardAuth, action: signin }

sf_guard_signout:
  url:   /logout
  param: { module: sfGuardAuth, action: signout }

prepare:
  url:   /prepare
  param: { module: home, action: prepare }

respond:
  url:   /respond
  param: { module: home, action: respond }
wiki:
  url:  /wiki

status:
  url:  /status.:sf_format
  param: { module: admin, action: status, sf_format: html }
  requirements:
    sf_method: [get]
    sf_format: (?:html|json)

status_module:
  url:  /:module/status.:sf_format
  param: { action: status, sf_format: html }
  requirements:
    sf_method: [get]
    sf_format: (?:html|json)

eventpoll:
  url:  /eventpoll
  param: { module: global, action: eventpoll}

# Keep these two at the bottom to aid in the addition of new routes.
default:
  url:   /:module/:action/

default_index:
  url:   /:module
  param: { action: index }

