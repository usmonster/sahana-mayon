<?php

/**
 * agScenarioFacilityGroup
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    AGASTI_CORE
 * @subpackage model
 * @author     CUNY SPS
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class agScenarioFacilityGroup extends BaseagScenarioFacilityGroup
{
  public function __toString()
  {
    return $this->getScenarioFacilityGroup();
  }

  public function updateLucene()
  {
    $doc = new Zend_Search_Lucene_Document();
    $doc->addField(Zend_Search_Lucene_Field::Keyword('Id', $this->id, 'utf-8'));
    $doc->addField(Zend_Search_Lucene_Field::unStored('group', $this->getScenarioFacilityGroup(), 'utf-8'));
    $doc->addField(Zend_Search_Lucene_Field::unStored('scenario', $this->getAgScenario()->scenario . ' ' .$this->getAgScenario()->description, 'utf-8'));
    $doc->addField(Zend_Search_Lucene_Field::unStored('group_type', $this->getAgFacilityGroupType()->getFacilityGroupType(), 'utf-8'));
    $doc->addField(Zend_Search_Lucene_Field::unStored('group_status', $this->getAgFacilityGroupAllocationStatus()->facility_group_allocation_status, 'utf-8'));
    $doc->addField(Zend_Search_Lucene_Field::unStored('bob', 'gargantua', 'utf-8'));
    $query = Doctrine_Query::create()
        ->select('g.id, sfr.id, fr.id, f.facility_name, frt.facility_resource_type')
        ->from('agScenarioFacilityGroup g')
        ->innerJoin('g.agScenarioFacilityResource sfr')
        ->innerJoin('sfr.agFacilityResource fr')
        ->innerJoin('fr.agFacility f')
        ->innerJoin('fr.agFacilityResourceType frt')
        ->where('g.id = ?', $this->id)
        ->execute(array(), Doctrine_Core::HYDRATE_SCALAR);
    $b = $this->getReferences();
    foreach($this->getAgScenarioFacilityResource() as $facRes) {
      $a = $facRes;
    }
    $r = 5;

    return $doc;
  }
}
