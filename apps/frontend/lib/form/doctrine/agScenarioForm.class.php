<?php

/**
 * extends BaseagScenarioForm
 *
 * PHP Version 5
 *
 * LICENSE: This source file is subject to LGPLv3.0 license
 * that is available through the world-wide-web at the following URI:
 * http://www.gnu.org/copyleft/lesser.html
 *
 * @author Charles Wisniewski, CUNY SPS
 *
 * Copyright of the Sahana Software Foundation, sahanafoundation.org
 */
class agScenarioForm extends BaseagScenarioForm
{
  /**
   * Initializes the array of datapoints for the scenario form.
   * */
  public function configure()
  {
    /**
     * Unset widgets that are auto-filled, unnecessary, or whose relations are not properly defined without using embedded forms.
     * */
    unset($this['created_at'],
        $this['updated_at'],
        $this['ag_event_list']);

    /**
     * Configure widgets that have been autogenerated
     * keep only the few that are needed
     * */
  }
  public function setup()
  {
    $this->setWidgets(array(
      'id'            => new sfWidgetFormInputHidden(),
      'scenario'      => new sfWidgetFormInputText(),
      'description'   => new sfWidgetFormInputText(),
    ));

    $this->setValidators(array(
      'id'            => new sfValidatorChoice(array('choices' => array($this->getObject()->get('id')), 'empty_value' => $this->getObject()->get('id'), 'required' => false)),
      'scenario'      => new sfValidatorString(array('max_length' => 64)),
      'description'   => new sfValidatorString(array('max_length' => 255, 'required' => false)),
    ));
    
    $this->validatorSchema->setPostValidator(
      new sfValidatorDoctrineUnique(array('model' => 'agScenario', 'column' => array('scenario')))
    );
    $this->widgetSchema->setNameFormat('ag_scenario[%s]');
    $this->errorSchema = new sfValidatorErrorSchema($this->validatorSchema);
    unset($this['created_at'],
        $this['updated_at'],
        $this['ag_event_list']);
    $this->widgetSchema->setLabels(array(
    'scenario' => 'Name',
    'description' => 'Description',
    //'facility_group' => 'Facility Groups'
    ));

    
    $sectionsDeco = new agWidgetFormSchemaFormatterSection($this->getWidgetSchema());
    $this->getWidgetSchema()->addFormFormatter('section', $sectionsDeco);
    $this->getWidgetSchema()->setFormFormatterName('section');
  }
/**
 *
 * @param <type> $con doctrine connection
 * @param <type> $forms array of forms passed in the event of a recursed SeF
 * @return <type> 
 */
  
}